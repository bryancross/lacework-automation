name: Manually Deploy LW CT/CF
# TODO: Leverage Terraform backend maintenance of state file (https://www.terraform.io/docs/language/settings/backends/s3.html)
# Controls when the action will run. 
on:
  repository_dispatch:
    types: [create]
  workflow_dispatch:
    inputs:
      MAN_AWS_REGION:
        description: 'AWS Region to deploy in'
        default: 'us-east-1'
        required: true
      MAN_AWS_ACCESS_KEY_ID: 
        description: 'Your AWS Access Key'
        default: 'AKIA3FJB3GXTVNUVIY4H'
        required: true
      MAN_AWS_SECRET_ACCESS_KEY: 
        description: 'Your AWS Secret'
        default: 'lIzp/7DwtG/mKzD6yI8WZ1/xangwnif2UWRHGG0A'
        required: true
      MAN_LW_API_KEY_ID:
        description: 'Your Lacework API KeyId'
        default: 'LWINTBRY_7CCC3D8447865E16C4086CC3C240B9F5121F3A362093AFF'
        required: true
      MAN_LW_API_SECRET:
        description: 'Your Lacework API Secret'
        default: '_67d888a3d3482667c13e49f57c6b6aa4'
        required: true
      MAN_LW_ACCOUNT:
        description: 'Your Lacework Account'
        default: 'lwintbryancross'
        required: true
               
      

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deployLW:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Mask up
        id: mask-up
        run: |
          
          MAN_AWS_REGION_SECRET=$(jq -r '.inputs.MAN_AWS_REGION' $GITHUB_EVENT_PATH)
          MAN_AWS_ACCESS_KEY_ID_SECRET=${{ github.event.inputs.MAN_AWS_ACCESS_KEY_ID }}
          MAN_AWS_SECRET_ACCESS_KEY_SECRET=${{ github.event.inputs.MAN_AWS_SECRET_ACCESS_KEY }}
          MAN_LW_API_KEY_ID_SECRET=${{ github.event.inputs.MAN_LW_API_KEY_ID }}
          MAN_LW_API_SECRET_SECRET=${{ github.event.inputs.MAN_LW_API_SECRET }}
          MAN_LW_ACCOUNT_SECRET=${{ github.event.inputs.MAN_LW_ACCOUNT }}
          
          
          echo ::add-mask::$MAN_AWS_REGION_SECRET
          echo ::add-mask::$MAN_AWS_ACCESS_KEY_ID_SECRET
          echo ::add-mask::$MAN_AWS_SECRET_ACCESS_KEY_SECRET
          echo ::add-mask::$MAN_LW_API_KEY_ID_SECRET
          echo ::add-mask::$MAN_LW_API_SECRET_SECRET
          echo ::add-mask::$MAN_LW_ACCOUNT_SECRET

          echo ::set-output name=aws_region::$MAN_AWS_REGION_SECRET
          echo ::set-output name=aws_access_key_id::$MAN_AWS_ACCESS_KEY_ID_SECRET
          echo ::set-output name=aws_secret::$MAN_AWS_SECRET_ACCESS_KEY_SECRET

          echo ::set-output name=lw_key_id::$MAN_LW_API_KEY_ID_SECRET
          echo ::set-output name=lw_secret::$MAN_LW_API_KEY_ID_SECRET
          echo ::set-output name=lw_account:$MAN_LW_ACCOUNT_SECRET
      
      

      # Runs a single command using the runners shell
      - name: download Lacework CLI
        run: |
          curl https://raw.githubusercontent.com/lacework/go-sdk/main/cli/install.sh -O

      - name: Run lacework installer
        run: |
          sudo chmod +x install.sh
          sudo ./install.sh
          lacework version
          echo ${{ steps.mask-up.outputs.MAN_AWS_ACCESS_KEY_ID_SECRET }}
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: = ${{ steps.mask-up.outputs.aws_access_key_id }}
          aws-secret-access-key: ${{ steps.mask-up.outputs.aws_secret }}
          aws-region: ${{ steps.mask-up.outputs.aws_region }}
          
          #aws-access-key-id: ${{ github.event.inputs.MAN_AWS_ACCESS_KEY_ID }}
          #aws-secret-access-key: ${{ github.event.inputs.MAN_AWS_SECRET_ACCESS_KEY }}
          #aws-region: ${{ github.event.inputs.MAN_AWS_REGION }}

#      - name: Do the THING
#        env:
#          LW_API_KEY: ${{ github.event.inputs.MAN_LW_API_KEY_ID }}
#          LW_API_SECRET: ${{ github.event.inputs.MAN_LW_API_SECRET }}
#          LW_ACCOUNT: ${{ github.event.inputs.MAN_LW_ACCOUNT }}
#        run: | 
#          terraform init
#          terraform apply --auto-approve
          